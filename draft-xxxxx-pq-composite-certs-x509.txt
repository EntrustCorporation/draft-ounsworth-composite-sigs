



XXX WG                                            P. Kampanakis (Editor)
Internet-Draft                                             Cisco Systems
Updates: RFC2986 RFC5280 (if approved)                 February 02, 2019
Intended status: Standards Track
Expires: August 6, 2019


   Composite Post-Quantum Keys and Signatures For Use In Internet PKI
                 draft-xxxxx-pq-composite-certs-x509-00

Abstract

   EDNOTE: This will be the abstract

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on August 6, 2019.

Copyright Notice

   Copyright (c) 2019 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.






Kampanakis (Editor)      Expires August 6, 2019                 [Page 1]

Internet-Draft               Composite Certs               February 2019


Table of Contents

   1.  Change Log  . . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   3
     3.1.  Traditional Certificate . . . . . . . . . . . . . . . . .   4
     3.2.  Composite Certificate . . . . . . . . . . . . . . . . . .   4
   4.  Composite Structures  . . . . . . . . . . . . . . . . . . . .   4
     4.1.  Composite Public Key  . . . . . . . . . . . . . . . . . .   4
     4.2.  Composite Signature Algorithm Structures  . . . . . . . .   5
   5.  Encoding Composite Structures As Octet Strings and Bit
       Strings . . . . . . . . . . . . . . . . . . . . . . . . . . .   6
   6.  Composite Signature Algorithm . . . . . . . . . . . . . . . .   6
     6.1.  Signature Generation  . . . . . . . . . . . . . . . . . .   6
     6.2.  Signature Verification  . . . . . . . . . . . . . . . . .   6
   7.  SUGGEST DELETION - Composite Certificates . . . . . . . . . .   6
     7.1.  SUGGEST DELETION - Validation . . . . . . . . . . . . . .   7
   8.  SUGGEST DELETION - Certificate Enrollment . . . . . . . . . .   7
     8.1.  SUGGEST DELETION - PCKS#10  . . . . . . . . . . . . . . .   7
     8.2.  SUGGEST DELETION - Subsequent Enrollments with
           Overlapping Public Keys . . . . . . . . . . . . . . . . .   7
   9.  SUGGEST DELETION - Certificate Revocation . . . . . . . . . .   7
     9.1.  SUGGEST DELETION - Certificate Revocation Lists (CRLs)  .   7
       9.1.1.  SUGGEST DELETION - CertificateList  . . . . . . . . .   7
       9.1.2.  SUGGEST DELETION - TBS Cert List  . . . . . . . . . .   8
     9.2.  SUGGEST DELETION - Revoking an algorithm: Revoked
           Algorithms CRL Extension  . . . . . . . . . . . . . . . .   8
     9.3.  SUGGEST DELETION - Implicit Revocation  . . . . . . . . .   8
     9.4.  SUGGEST DELETION - End-Entity Requested Revocation  . . .   8
   10. New Algorithm Identifiers . . . . . . . . . . . . . . . . . .   8
   11. In Practice . . . . . . . . . . . . . . . . . . . . . . . . .   8
   12. Implications for existing standards . . . . . . . . . . . . .   9
     12.1.  RFC 2986 . . . . . . . . . . . . . . . . . . . . . . . .   9
     12.2.  RFC 5280 . . . . . . . . . . . . . . . . . . . . . . . .   9
     12.3.  Cryptographic protocols  . . . . . . . . . . . . . . . .   9
   13. IANA Considerations . . . . . . . . . . . . . . . . . . . . .   9
   14. Security Considerations . . . . . . . . . . . . . . . . . . .   9
   15. Appendices  . . . . . . . . . . . . . . . . . . . . . . . . .  10
     15.1.  Comparison with draft-truskovsky-lamps-pq-hybrid-x509  .  10
   16. Contributors  . . . . . . . . . . . . . . . . . . . . . . . .  10
   17. Acknowledgenents  . . . . . . . . . . . . . . . . . . . . . .  10
   18. References  . . . . . . . . . . . . . . . . . . . . . . . . .  10
     18.1.  Normative References . . . . . . . . . . . . . . . . . .  10
     18.2.  Informative References . . . . . . . . . . . . . . . . .  11
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .  11






Kampanakis (Editor)      Expires August 6, 2019                 [Page 2]

Internet-Draft               Composite Certs               February 2019


1.  Change Log

   EDNOTE: Remove this section before publication.

   draft-xxxxx-pq-composite-certs-x509-00

   o  Beginning of the draft

2.  Introduction

   EDNOTE: This will be the Introduction

   During the transition to post-quantum cryptography, the deployment of
   cryptographic certificates using post-quantum algorithms will face
   two challenges

   o  Algorithm strength uncertainty: During the transition period, some
      post-quantum signature and encryption algorithms will not be fully
      trusted, while also the trust in legacy public key algorithms will
      also start to erode.  A relying party may learn some time after
      certificate deployment that a public key algorithm has become
      untrustworthy, but in the interim, they may not know which
      algorithm an adversary has compromised.

   o  Backwards compatibility: During the transition period, post-
      quantum algorithms will not be supported by all clients.

   This document provides a mechanism to address algorithm strength
   uncertainty by providing formats for encoding multiple public keys
   and multiple signature values into existing public key and signature
   fields.  The issue of backwards compatibility is left open to be
   addressed in separate draft(s).

3.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   This document defines the following terms:

   o  Traditional Certificate

   o  Composite certificate





Kampanakis (Editor)      Expires August 6, 2019                 [Page 3]

Internet-Draft               Composite Certs               February 2019


   EDNOTE: Look up the standard way to do glossaries in RFCs.  EDNOTE:
   I'm not sure we actually need these terms in this draft.  We'll
   certainly need them in the Parallel PKIs draft.

3.1.  Traditional Certificate

   An X.509 certificate conforming to [RFC5280].  In particular, a
   certificate containing a single subject public key, and a single
   issuer signature.

3.2.  Composite Certificate

   An X.509 certificate containing two or more subject public keys and
   two or more issuer signatures as defined in this document.

4.  Composite Structures

   ~~DESCRIBE DESIGN AND INTENT, SEQUENCE SO WE HAVE 2 OR MORE, BLAH
   BLAH~~ This section defines

   o  A general structure for holding multiple public keys within a
      single public key data structure.

   o  Data structures needed to make use of the Composite Signature
      signature algorithm (defined in Section 6), which encapsulates
      signatures made with multiple public keys.

   These structures can be used to address the "algorithm strength
   uncertainty" concern from Section 2, though the authors note that
   this mechanism may prove to have utility beyond the post-quantum
   migration.

4.1.  Composite Public Key

   A composite public key is a sequence of public keys that are
   generally used together.  A composite public key is identified by the
   object identifier

   id-ce-compositePublicKey OBJECT IDENTIFIER ::= { OID }

   The parameters field for this public key type MUST be absent.  The
   composite public key data is represented by the following structure:

   CompositePublicKey ::= SEQUENCE OF SubjectPublicKeyInfo

   where each element of the sequence is a SubjectPublicKeyInfo of a
   public key that MAY be used in conjunction with the other keys in the
   sequence.  When the public key must be provided in octet string or



Kampanakis (Editor)      Expires August 6, 2019                 [Page 4]

Internet-Draft               Composite Certs               February 2019


   bit string format, the data structure is converted as specified in
   Section 5.

4.2.  Composite Signature Algorithm Structures

   The Composite Signature signature algorithm defined in Section 6 is
   identified by the following object identifier:

   id-ce-compositeSignature OBJECT IDENTIFIER ::= { OID }

   The following algorithm parameters MUST be included when this
   identifier is used:

   CompositeSignatureAlgorithmParams ::= SEQUENCE OF AlgorithmIdentifier

   The algorithms in the sequence MUST correspond to the order in which
   the public keys are listed in the associated CompositePublicKey.

   EDNOTE: We haven't defined the private key syntax, but I think we
   should

   The Composite Signature algorithm output is the DER encoding of the
   following structure:

   EDNOTE: Does this structure need an OID, or is it sufficient that the
   algorithm have an OID as defined above?

   id-ce-CompositeSignatureValue OBJECT IDENTIFIER ::= { OID }

   CompositeSignatureValue ::= SEQUENCE OF BIT STRING

   The choice of "SEQUENCE OF BIT STRING" rather than "BIT STRING" is so
   the type-length-value encoding can solve the problem of variable-
   length signature values.  The signature values in the sequence MUST
   correspond to the order in which the signature algorithms are listed
   in the corresponding CompositeSignatureAlgorithmParams, and in which
   the public keys are listed in the associated CompositePublicKey.

   Defining composite algorithm parameters as above avoids the
   exponential proliferation of OIDs needed for each pairwise
   combination of signature algorithms.  This scheme also naturally
   extends from 2-keypair to n-keypair should a vendor find a use for
   this.








Kampanakis (Editor)      Expires August 6, 2019                 [Page 5]

Internet-Draft               Composite Certs               February 2019


5.  Encoding Composite Structures As Octet Strings and Bit Strings

   EDNOTE: Examples of how other specifications specify how a data
   structure is converted to a bit string can be found in RFC 2313,
   section 10.1.4, 3279 section 2.3.5, and RFC 4055, section 3.2.

   Many specifications require that the composite public key and
   composite signature data structures defined above be represented by
   an octet string or bit string.  When an octet string is required, the
   DER encoding of the composite data structure SHALL be used directly.
   When a bit string is required, the octets of the DER encoded
   composite data structure SHALL be used as the bits of the bit string,
   with the most significant bit of the first octet becoming the first
   bit, and so on, ending with the least significant bit of the last
   octet becoming the last bit of the bit string.

6.  Composite Signature Algorithm

   The Composite Signature signature algorithm produces a single
   composite signature by applying multiple signature algorithms to the
   input data, using multiple public keys, with the resulting signature
   effectively being the concatenation of the individual signatures.
   This algorithm can address algorithm strength uncertainty by
   leveraging the strength of all of the signature algorithms used as
   part of the composite signature.

6.1.  Signature Generation

   Input:

   Output:

   Signature Generation Procedure:

6.2.  Signature Verification

   Input:

   Output:

   Signature Verification Procedure:

7.  SUGGEST DELETION - Composite Certificates

   EDNOTE: This section to be removed if we are only defining
   algorithms?  For the (old) content of this section, see the git
   commit history.




Kampanakis (Editor)      Expires August 6, 2019                 [Page 6]

Internet-Draft               Composite Certs               February 2019


7.1.  SUGGEST DELETION - Validation

   EDNOTE: This section to be removed if we are only defining
   algorithms?  For the (old) content of this section, see the git
   commit history.

8.  SUGGEST DELETION - Certificate Enrollment

   EDNOTE: This section to be removed if we are only defining
   algorithms?  For the (old) content of this section, see the git
   commit history.

   Some aspects of certificate enrollment need to be modified to
   accommodate certificates with composite public keys and signatures.

8.1.  SUGGEST DELETION - PCKS#10

   EDNOTE: We probably still need this section, but not the way I had
   it.  For the (old) content of this section, see the git commit
   history.

8.2.  SUGGEST DELETION - Subsequent Enrollments with Overlapping Public
      Keys

   EDNOTE: This section to be removed if we are only defining
   algorithms?  For the (old) content of this section, see the git
   commit history.

9.  SUGGEST DELETION - Certificate Revocation

   EDNOTE: This subsection will talk about compromises of keys,
   revocation and how recovation will be verified.

   When a CA checks for key reuse of compromised keys, they SHOULD
   (MUST?) check each key individually, not a bit-for-bit match of the
   entire "CompositePublicKey" field.

9.1.  SUGGEST DELETION - Certificate Revocation Lists (CRLs)

   EDNOTE: This section to be removed if we are only defining
   algorithms?  For the (old) content of this section, see the git
   commit history.

9.1.1.  SUGGEST DELETION - CertificateList

   EDNOTE: This section to be removed if we are only defining
   algorithms?  For the (old) content of this section, see the git
   commit history.



Kampanakis (Editor)      Expires August 6, 2019                 [Page 7]

Internet-Draft               Composite Certs               February 2019


9.1.2.  SUGGEST DELETION - TBS Cert List

   EDNOTE: This section to be removed if we are only defining
   algorithms?  For the (old) content of this section, see the git
   commit history.

9.2.  SUGGEST DELETION - Revoking an algorithm: Revoked Algorithms CRL
      Extension

   EDNOTE: This section to be removed if we are only defining
   algorithms?  For the (old) content of this section, see the git
   commit history.

9.3.  SUGGEST DELETION - Implicit Revocation

   EDNOTE: This section to be removed if we are only defining
   algorithms?  For the (old) content of this section, see the git
   commit history.

9.4.  SUGGEST DELETION - End-Entity Requested Revocation

   EDNOTE: This section to be removed if we are only defining
   algorithms?  For the (old) content of this section, see the git
   commit history.

10.  New Algorithm Identifiers

   EDNOTE: This subsection defines the OIDs for the initial composite
   algorithm combinations we want to define.  EDNOTE: Merge with
   Section 13 ??

11.  In Practice

   EDNOTE: This section will talk about practical issue of how these
   certificates will be used.  For example it will talk about the size
   of these certs and cert chains.  It will explain that if a cert in
   the chain is a Composite cert then the whole chain needs to be of
   Composite Certs.  It will also explain that the root CA cert does not
   have to be of the same algorithms.  The root cert SHOULD NOT be
   transferred in the authentication exchange to save transport overhead
   and thus it can be different than the intermediate and leaf certs.
   It will talk about overhead (size and processing).  It will also
   discuss backwards compatibility.  It could include a subsection about
   implementation considerations.







Kampanakis (Editor)      Expires August 6, 2019                 [Page 8]

Internet-Draft               Composite Certs               February 2019


12.  Implications for existing standards

12.1.  RFC 2986

   EDNOTE: summarize the updates to RFC 2986 (CSR / PKCS#10).

12.2.  RFC 5280

   EDNOTE: summarize the updates to RFC 5280 (X.509).

12.3.  Cryptographic protocols

   EDNOTE: This section talks about how protocols like (D)TLS and IKEv2
   are affected by this specifications.  It will not attempt to solve
   all these problems, but it will explain the rationale, how things
   will work and what open problems need to be solved.  It will talk
   about implications of how to distinguish what cert chain to send.  It
   will describe how signature_algorithms extension will be used in TLS.
   What is missing in TLS and IKEv2 like what and how to sign something
   with the two private keys.  It will discuss overhead (size and
   processing) as in Section 11.  It will also discuss PKCS#10.

13.  IANA Considerations

   EDNOTE: This section will include content only if new OIDs or IANA
   codepoints are asigned for it.

   There are no IANA Considerations for this specification.  EDNOTE: ^^
   ??

   EDNOTE: We will need OIDs for these ASN.1 structures:

   o  CompositeAlgorithmIdentifier

   o  CompositePublicKey

   o  CompositeSignatureValue

14.  Security Considerations

   EDNOTE: This section includes the Security Considerations.

   o  Case: Only one key is compromised.

   o  Case: An entire algorithm is compromised.






Kampanakis (Editor)      Expires August 6, 2019                 [Page 9]

Internet-Draft               Composite Certs               February 2019


   o  CA implementations need to be careful when checking for
      compromised key reuse: unpack the CompositePublicKey structure and
      compare individual keys.

15.  Appendices

15.1.  Comparison with draft-truskovsky-lamps-pq-hybrid-x509

   EDNOTE: This section will explain the differences from
   [I-D.truskovsky-lamps-pq-hybrid-x509].  IPR Claims should be
   mentioned here if necessary.  Other things to consider are the things
   we discussed in an email thread like simplicity and format,
   inadvertnt implementation errors, algorithm agility.

   (MO): Move to appendix, or to a supporting document?

16.  Contributors

   EDNOTE: This section includes the contributors of this draft so the
   authors in the first page do not exceed five and thus violate
   RFC2223-bis.  Example where this happens is RFC1122.  We can have
   another Editor for this draft.  Doesn't need to be Panos.

   This document incorporates contributions and comments from a large
   group of experts.  The Editor would especially like to acknowledge
   the tireless dedication of the following people, who attended many
   long meetings and generated millions of bytes of electronic mail over
   the past 3 years months in pursuit of this document: Mike Ounsworth
   (Entrust Datacard), John Gray (Entrust Datacard), Serge Mister
   (Entrust Datacard), Scott Fluhrer (Cisco Systems) and Panos
   Kampanakis (Cisco Systems).

   We are grateful to all, including any contributors who may have been
   inadvertently omitted from this list.

17.  Acknowledgenents

   EDNOTE: this section include all those that need to be acknowledged
   in the draft

18.  References

18.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.



Kampanakis (Editor)      Expires August 6, 2019                [Page 10]

Internet-Draft               Composite Certs               February 2019


   [RFC2986]  Nystrom, M. and B. Kaliski, "PKCS #10: Certification
              Request Syntax Specification Version 1.7", RFC 2986,
              DOI 10.17487/RFC2986, November 2000,
              <https://www.rfc-editor.org/info/rfc2986>.

   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,
              Housley, R., and W. Polk, "Internet X.509 Public Key
              Infrastructure Certificate and Certificate Revocation List
              (CRL) Profile", RFC 5280, DOI 10.17487/RFC5280, May 2008,
              <https://www.rfc-editor.org/info/rfc5280>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

18.2.  Informative References

   [I-D.truskovsky-lamps-pq-hybrid-x509]
              Truskovsky, A., Geest, D., Fluhrer, S., Kampanakis, P.,
              Ounsworth, M., and S. Mister, "Multiple Public-Key
              Algorithm X.509 Certificates", draft-truskovsky-lamps-pq-
              hybrid-x509-01 (work in progress), August 2018.

Author's Address

   Panos Kampanakis
   Cisco Systems

   Email: pkampana@cisco.com






















Kampanakis (Editor)      Expires August 6, 2019                [Page 11]
