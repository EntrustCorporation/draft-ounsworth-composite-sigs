# Multiple Public Key and Signature Format

- It may be desired to stipulate requirements on the relying party (though we believe this only applies when you have more than 2
algorithms). For example:
  - Verify at least one legacy and one post-quantum algorithm
  - Verify all signatures
  - Verify all supported signatures
- Is this left as purely a client-side setting, or should the issuing CA have a say, similar to how PolicyConstraints is defined?
  - The CA may want to change the policy after issuing the certificate, reflecting current state
  - CA could specify a list of allowed legacy algorithms and a list of allowed post-quantum algorithms and require one signature from each category.
- The CompositeSignatureAlgorithm structure could define a list of list of algorithms, and the spec could suggest that clients SHOULD
verify one from each sequence.
  - An alternative approach would be to require the client to verify all signatures from at least one list.
- The spec could specify that a maximum of two algorithms SHOULD be specified in the sequence, and that in that case both SHOULD be
verified.


## Revocation

- Can you revoke individual keys within a cert (which will require defining a new CRL Entity Extension), or you can only revoke all the keys?
  - Either way, when a CA checks for key reuse of compromised keys, they SHOULD (MUST?) check each key individually, not a bit-for-bit match of the entire `CompositePublicKey`.
  - MO: I vote for the simpler method: that you revoke them all at once.
- Be explicit about whether a single-key revocation request has the authority to revoke the composite cert, and vice-versa.
